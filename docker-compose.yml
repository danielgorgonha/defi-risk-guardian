version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: defi-risk-postgres
    environment:
      POSTGRES_DB: defi_risk
      POSTGRES_USER: defi_user
      POSTGRES_PASSWORD: defi_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U defi_user -d defi_risk"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: defi-risk-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: defi-risk-backend
    environment:
      - DATABASE_URL=postgresql://defi_user:defi_password@postgres:5432/defi_risk
      - REDIS_URL=redis://redis:6379
      - STELLAR_NETWORK=testnet
      - HORIZON_URL=https://horizon-testnet.stellar.org
      - REFLECTOR_API_URL=https://reflector-api.stellar.org
      - SECRET_KEY=your-secret-key-change-in-production
      - DEBUG=true
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: defi-risk-frontend
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NEXT_PUBLIC_APP_NAME=DeFi Risk Guardian
      - NEXT_PUBLIC_APP_VERSION=1.0.0
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: npm run dev

  # Celery Worker (Background Jobs)
  celery-worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: defi-risk-celery-worker
    environment:
      - DATABASE_URL=postgresql://defi_user:defi_password@postgres:5432/defi_risk
      - REDIS_URL=redis://redis:6379
      - STELLAR_NETWORK=testnet
      - HORIZON_URL=https://horizon-testnet.stellar.org
      - REFLECTOR_API_URL=https://reflector-api.stellar.org
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
    command: celery -A app.tasks worker --loglevel=info

  # Celery Beat (Scheduler)
  celery-beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: defi-risk-celery-beat
    environment:
      - DATABASE_URL=postgresql://defi_user:defi_password@postgres:5432/defi_risk
      - REDIS_URL=redis://redis:6379
      - STELLAR_NETWORK=testnet
      - HORIZON_URL=https://horizon-testnet.stellar.org
      - REFLECTOR_API_URL=https://reflector-api.stellar.org
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
    command: celery -A app.tasks beat --loglevel=info

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: defi-risk-network
